html{
  scroll-behavior: smooth;
}

body{
  background-color: #737373;
  font-size: 18px;
  line-height: 1.15;
  margin: 0;
  padding: 0;
}


.overview{
  background-attachment: fixed; /* Parallax effect */     
  background-position: center;  /* Parallax effect */
  background-repeat: no-repeat; /* Parallax effect */
  background-size: cover;       /* Parallax effect */
  color: white;
  height: 400px;                /* Parallax effect */
}


.overview p{
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1{
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2{
  font-size: 32px;
  line-height: 1.5;
}

nav li{
  display:inline;
  padding-right:20px;

}

nav a{
  color: black;
  font-weight: bold;
  text-decoration: none; 
}


.skip a{
  background: white;
  left: 0;
  padding: 6px;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  z-index: 1;
}


nav{
  background-color: #ddd;
  padding: 25px 0; 
  text-align: left;
}

footer{
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}


.text-block{
  background-color: rgba(255, 255, 255, .8);
  border: 10px solid black;
  padding: 30px;
}


@media screen and (prefers-reduced-motion: reduce){
  html{
      scroll-behavior: auto; /* Removes scroll animation */
  }

  .skip a{
    -webkit-transition: none; /* sets to default setting */
    transition: none;        /* sets to default setting */
   }

  /*Turn off parallax*/
  header{
    background-attachment: initial;
  }
}



/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
a:hover{
  text-decoration: underline;
  font-weight: bolder;
}



/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip {
  position: absolute;
  top: -40px;
  left: 0;
  display: none;
}



/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip:focus {
  display: inline;
}


/* Step 3: Write selector/rule property to style all elements when in focus*/
:focus {
  border: 2px solid black;
}



/* Step 4: Write selector/rule property to style the container */
@media screen and (max-width: 768px) {
  .container{
    display: grid;
    grid-template-columns: 1fr, 5fr, 1fr;
    gap: 15px;
  }
  /* Add your mobile-specific styles here */


/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.overview{
  grid-column: 1/4;
  min-height: 500px;
  background-image: url('../images/header.jpg');
  background-attachment: fixed;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center; 
  padding: 10px;
  text-align: center;
}



/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */
 .about{
  grid-column: 2/3;
  grid-row: 2/3;
 }
 .method{
  grid-column: 2/3;
  grid-row: 3/4;
 }
.clients{
  grid-column: 2/3;
  grid-row: 4/5;
}
.contact{
  grid-column: 2/3;
  grid-row: 5/6;
}
.about-image{
  grid-column: 1/4;
  max-height: 600px;
  grid-row: 2/3;
}
.method-image{
  grid-column: 1/4;
  max-height: 600px;
  grid-row: 3/4;
}
.clients-image{
  grid-column: 1/4;
  max-height: 600px;
  grid-row: 4/5;
}
.contact-image{
  grid-column: 1/4;
  max-height: 600px;
  grid-row: 5/6;
}
      /*This will be a lot of rules.... but be strategic and combine seletors*/


 /* Step 8: Write the selector/rule property to style the .text-block class. */
 .text-block{
  display: flex; /* Use flexbox for centering */
  align-items: center; /* Center vertically */
  justify-content: center; /* Center horizontally */
  max-height: 250px;
  text-align: center; /* Center text */
  /* Add more styles as needed */
 }


/* Add your media query here */

}
  /* Step 9: Write the selector/rule property to style the nav element */

 
  /* Step 10: Write the selector/rule property to update the .container class */
  @media screen and (min-width: 800px) {
    .navbar ul {
      margin: 0;
      padding: 0;
      text-align: right; 
  }
  .container{
    display: grid;
    grid-template-columns: 50px, auto, 500px, auto, 50px;
    gap: 15px;
  }
  .overview{
    grid-column: 1/4;
    min-height: 500px;
    background-image: url('../images/header.jpg');
    background-attachment: fixed;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center; 
    padding: 10px;
    text-align: center;
  }

  .about{
    grid-column: 3/6;
    grid-row: 2/3;
   }
   .method{
    grid-column: 2/5;
    grid-row: 3/4;
   }
  .clients{
    grid-column: 5/8;
    grid-row: 4/5;
  }
  .contact{
    grid-column: 4/7;
    grid-row: 5/6;
  }
  .about-image{
    grid-column: 6/9;
    max-height: 600px;
    grid-row: 2/3;
  }
  .method-image{
    grid-column: 7/10;
    max-height: 600px;
    grid-row: 3/4;
  }
  .clients-image{
    grid-column: 8/11;
    max-height: 600px;
    grid-row: 4/5;
  }
  .contact-image{
    grid-column: 9/12;
    max-height: 600px;
    grid-row: 5/6;
  }

  }
  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/


